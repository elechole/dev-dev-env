

- Virtualbox setting
	sudo /etc/init.d/vboxdrv setup
	- Permission setting
		vboxusers에 user 추가
	- Ethernet
		- Host I/F: masquerading bt TAP0
			GW: 192.168.10.1(TAP0's IP)
	- USB Host
		sudo vi /etc/init.d/mountdevsubfs.sh
			# Add following list into start().
			mkdir -p /dev/bus/usb/.usbfs
			domount usbfs "" /dev/bus/usb/.usbfs -obusmode=0700,devmode=0600,listmode=0644
			ln -s .usbfs/devices /dev/bus/usb/devices
			mount -rbind /dev/bus/usb /proc/bus/usb
		sudo vi /etc/fstab
			none	/procbus/usb	usbfs	devgid=<vboxusers GID>,devmod=0664	0 0

	- Use Physical Partitions.
		For Windows:
			VBoxManage internalcommands createrawvmdk -filename "C:\Users\<user_name>\VirtualBox VMs\<VM_folder_name>\<file_name>.vmdk" -rawdisk \\.\PhysicalDrive#
			VBoxManage internalcommands createrawvmdk -filename C:\mydrive.vmdk -rawdisk \\.\PhysicalDrive1 -partitions 1, 3
			ex) Disk 3 / partition 4
				CMD > VBoxManage.exe internalcommands listpartitions -rawdisk \\.\PhysicalDrive3
					Number  Type   StartCHS       EndCHS      Size (MiB)  Start (Sect)
					1       0x00  0   /0  /0   0   /0  /0            128           34
					2       0x00  0   /0  /0   0   /0  /0           1024       264192
					3       0x00  0   /0  /0   0   /0  /0           4096      2361344
					4       0x00  0   /0  /0   0   /0  /0          61440     10749952
					5       0x00  0   /0  /0   0   /0  /0         410250    136579072
				CMD > VBoxManage.exe internalcommands createrawvmdk \
					-filename f:\VirtualBox_VM\Ubuntu_x64\home-nvme.vmdk \
					-rawdisk \\.\PhysicalDrive3 -partitions 5
				CMD > VBoxManage.exe internalcommands createrawvmdk -filename f:\VirtualBox_VM\Ubuntu_x64\home-nvme.vmdk -rawdisk \\.\PhysicalDrive3 -partitions 5

		For Linux:
			VBoxManage internalcommands createrawvmdk -filename "</path/to/file>.vmdk" -rawdisk /dev/sda
			VBoxManage internalcommands createrawvmdk -filename sda.vmdk -rawdisk /dev/sda -partitions 1,4,5 -relative
		For Mac OS X:
			VBoxManage internalcommands createrawvmdk -filename "</path/to/file>.vmdk" -rawdisk /dev/disk#

===================================================================
	EFI Problems in VirtualBox 5.x~
- EFI Setting 변경사항 유지 되지 않는 문제
=> 물리 하드에서 Windows 부팅 후  다음 번 부팅시 grub 2.02 화면으로 들어담
   VM의 EFI  Boot Option이 초기화 되는 것이 원인!!
=> EFI 초기화 상태에서 Windows bootting 가능 하도록 함.
===================================================================
# EFI for Virtualbox using Physical Sorage
by jyyhuh 

## Rename /EFI/Boot to /EFI/Boot-org
   - Backup Original files

## Copy /EFI/Microsoftt/Boot to /EFI/Boot
   - There is Window Boot files by EFI

## Rename /EFI/Boot/bootmgfw.efi tto /EFI/Boot/bootx64.efi
   - /EFI/Boot/bootx64.efi is Default boot image by EFI.
===================================================================


# Linux with Physical disk partitions.
- /boot, /, /opt => virtual images
- /home: physical partition.
- swap: physical partition.

# Boot Windows on Physical disk: https://tuwlab.com/26039
---------------------------------------------------------------
0. 물리 파티션을 참조하는 가상 디스크 생성
	물리 디스크에 존재하는 파티션들을 조립해서 가상머신에서 사용하기 위한 디스크 이미지를 만들어야 합니다.
	이 글에서는 Windows 7이 리눅스와는 다른 디스크의 첫 번째 파티션에 설치되어 있는 상황을 예시로 들어 설명합니다.

	Windows 7을 한 디스크를 온전히 사용하도록 설치한 경우 100MB 크기의 첫 번째 파티션은 시스템 예약 영역이 되고,
	두 번째 파티션이 실제 파일들이 설치되는 C드라이브가 됩니다.
	따라서, Windows 7 디스크 이미지에는 최소 이 두개 파티션이 포함되어 있어야 합니다.

	2개 파티션을 포함하는 것 외에 중요한 작업이 또 필요한데,
	바로 MBR(Master Boot Record)을 이식하는 작업입니다.
	디스크의 첫 2048 Byte 영역은 MBR 영역으로 예약되어 있으며, 여기에는 부팅에 관련된 정보가 기록되어 있습니다.

	여기서 MBR을 물리 디스크에서 가져오지 않고 Fake MBR로 대체하는 이유는 Windows 7의 독특한 부팅 방법 때문입니다.
	Windows 7은 설치 과정에서 MBR에 디스크 고유 식별자(Unique ID)를 기록해 두고,
	부팅 과정에서 이 식별자를 참조해서 올바른 부트 파티션을 찾아갑니다.

	물리 디스크의 파티션들을 모아서 생성한 가상 디스크는 이 고유 식별자가 물리 디스크의 고유 식별자와 달라지는데,
	이로 인해 부팅이 올바르게 이루어지지 않는 것입니다.
	FakeMBR을 이식하지 않은 상태에서 Windows 7 물리 디스크 부팅을 시도하면
	Booting Logo Show 직후에 다음과 같은 화면과 함께 Crash가 발생합니다.

	가상 디스크에 Fake MBR을 이식하는 방법으로 이 문제를 해결할 수 있습니다.
	물리 디스크의 MBR을 그대로 연결해서 FixMbr을 해도 되지만, 그럴 경우 Native 부팅이 불가능해집니다.
	이 Fake MBR은 가상머신에서 부팅할 경우에만 사용되므로 Native 부팅에는 전혀 영향을 주지 않습니다.

	요약하면, Fake MBR을 사용함으로써 가상머신 부팅과 Native 부팅이 모두 가능해지는 것입니다.

1. Fake MBR 생성
	sudo apt-get install mbr
	install-mbr -e12 --force ./fakembr.mbr
	-e12 옵션은 1, 2번 파티션을 사용하겠다는 의미입니다. 추가적으로 사용할 파티션이 있으면 이 옵션에 기재하도록 합니다.
2. 가상 디스크 생성
	VBoxManage internalcommands createrawvmdk \
		-filename ./Windows7-RawDisk.vmdk \
		-rawdisk /dev/sdX \
		-partitions {파티션 목록} \
		-mbr {fakembr.mbr의 경로} -relative
	예: /dev/sda의 1, 2번 파티션을 사용하려는 경우:
		VBoxManage internalcommands createrawvmdk \
			-filename ./Windows7-RawDisk.vmdk \
			-rawdisk /dev/sda \
			-partitions 1,2 \
			-mbr ./fakembr.mbr -relative

3. 생성한 가상 디스크를 가상머신의 Storage에 등록합니다.

4. MBR 복구
	가상 디스크에 이식한 Fake MBR에는 아직 아무런 정보도 기록되어 있지 않은 상태입니다.
	Windows 7의 설치 패키지에 포함된 fixmbr을 이용하여 Fake MBR에 가상 머신의 환경에 부합하는 정보를 입력할 수 있습니다.

	가상머신의 CD/DVD 드라이브에 Windows 7 설치 ISO 파일을 집어넣고 설치 화면으로 진입합니다.
	설치 초기 메뉴화면이 나타나면 [Shift]+[F10]을 눌러서 CMD창을 띄우고 다음과 같이 입력합니다.

	bootrec /FixMbr

5. Register Unique Disk Identifier.
	FixMbr에서 귀찮은 작업을 모두 처리해 주면 좋겠지만, 그렇지 않습니다.
	위에서 설명한 디스크 고유 식별자를 찾아서 수동으로 등록해 주어야 합니다.

	CMD창에서 dir 명령을 이용하여 Windows 7이 설치되어 있는 파티션이 어느 드라이브에 마운트 되었는지 찾아냅니다.
	목록에 Windows나 Users, Program Files 등이 보이면 바로 그 드라이브가 맞을 것입니다.
	가상 디스크 파티션을 개성넘치게(?) 구성한 경우가 아니라면, 대개 D:\에 마운트 되어 있을 것입니다.

	이제 다음 명령을 쳐서 레지스트리 정보를 로드하고 레지스트리 에디터를 실행합니다.
	(Guest Edition이 설치되지 않은 상태이므로 복붙이 동작하지 않습니다. 천천히 인내심을 갖고 명령을 입력하세요..^^)

	reg load HKLM\Computer_System D:\Windows\system32\config\system
	regedit

	HKEY_LOCAL_MACHINE\Computer_System\MountedDevices
	=> \DosDevices\C: 항목. 이 항목의 데이터값 앞 4Byte(8자리)를 기억해 두도록 합니다.
	이 4자리가 바로 MBR에 등록되는 디스크 고유 식별자입니다.


	CMD창으로 돌아가서 diskpart를 이용해서 디스크 고유 식별자를 등록하도록 합니다.

	이 때, Endian을 뒤집어서 Unique ID를 입력해야 합니다.
	즉, 위에서 확인한 디스크 고유 식별자 8자리를 2개씩 묶어서 순서를 반전시키도록 합니다.
	ex) 823b0a74 → 740a3b82

	diskpart
	DISKPART> select disk 0
	DISKPART> uniqueid disk id={Endian 반전된 디스크 고유 식별자}
	DISKPART> exit

6. 존재하지 않는 하드웨어 장치들에 대한 서비스 시작 방지
	다시 레지스트리 편집기로 돌아와서 다음 항목들을 모두 0으로 바꿔줍니다.

	이 서비스들을 공통적으로 가상머신에서 지원하지 않는 하드웨어 장치의 드라이버를 로드하려고 시도하는데,
	부팅과정에서 이들 서비스가 시작되지 않도록 설정해줘야 올바르게 부팅이 됩니다.
		HKEY_LOCAL_MACHINE\Computer_System\ControlSet001\services\msahci\start
		HKEY_LOCAL_MACHINE\Computer_System\ControlSet001\services\atapi\Start
		HKEY_LOCAL_MACHINE\Computer_System\ControlSet001\services\intelide\Start
		HKEY_LOCAL_MACHINE\Computer_System\ControlSet001\services\pciide\Start

7. 레지스트리를 Unload합니다.

	reg unload HKLM\Computer_System
